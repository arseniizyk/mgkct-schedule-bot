services:
    nats:
        image: nats
        ports:
            - '4222:4222'
            - '8222:8222' # мониторинг
        command: '-DV -m 8222'

    tg-bot:
        build:
            context: .
            dockerfile: services/tg-bot/Dockerfile
        container_name: tg-bot
        command: ./tg-bot
        env_file:
            - .env
        depends_on:
            - scraper
            - nats
        restart: unless-stopped
        environment:
            - IS_DOCKER=true
            - GRPC_ADDR=scraper:${GRPC_PORT}

    scraper:
        build:
            context: .
            dockerfile: services/scraper/Dockerfile
        container_name: scraper
        command: ./scraper
        env_file:
            - .env
        depends_on:
            - nats
            - postgres
        restart: always
        expose:
            - '${GRPC_PORT:-9001}'
        ports:
            - '${HTTP_PORT:-8000}:${HTTP_PORT:-8000}'
        environment:
            - IS_DOCKER=true

    postgres:
        image: postgres
        container_name: scraper-postgres
        restart: always
        volumes:
            - ./migrations/:/docker-entrypoint-initdb.d/
        env_file:
            - .env
        ports:
            - '5433:5432'
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
            interval: 3s
            timeout: 3s
            retries: 5

    adminer:
        image: adminer
        restart: always
        ports:
            - '8080:8080'
